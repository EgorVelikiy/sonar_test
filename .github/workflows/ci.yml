name: Backend CI Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: main
    types: [opened, synchronize, reopened]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Start server
        run: npm start &

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
           
  sonar:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl --fail http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Wait SonarQube
        run: |
          echo "Waiting for SonarQube..."
          sleep 60

      - name: Install dependencies
        run: npm install
        
      - name: Tests coverage
        run: npm run coverage
      
      - name: SonarQube Scan
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=sonar_test \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=${{ secrets.SONAR_TOKEN }}
      
      - name: Check Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}