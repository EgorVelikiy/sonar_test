name: Backend CI Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: main
    types: [opened, synchronize, reopened]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Start server
        run: npm start &

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  sonar-analysis:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install
        
      - name: Run tests with coverage
        run: npm run coverage
 
      - name: SonarQube Scan
        run: |
          sonar-scanner -D"sonar.login=${{ secrets.SONAR_TOKEN }}" -D"sonar.host.url=${{ secrets.SONAR_HOST_URL }}"

      - name: Wait for SonarQube analysis to finish
        run: |
          sleep 10
      
      - name: Get Quality Gate Status
        id: quality_gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          $result=curl.exe -i -v -u ${{ secrets.SONAR_TOKEN }}: "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=sonar_test"
          
          $status = ($result | ConvertFrom-Json).projectStatus.status

          if ($status -eq "OK") {
              Write-Host "Quality Gate Passed"
          } else {
              Write-Host "Quality Gate Failed"
          }