name: Backend CI Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: main
    types: [opened, synchronize, reopened]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Start server
        run: npm start &

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  sonar-analysis:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install
        
      - name: Run tests with coverage
        run: npm run coverage

      - name: Set up SonarQube Scanner
        run: |
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> $GITHUB_ENV
          echo "SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }}" >> $GITHUB_ENV
 
      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -D"sonar.projectKey=sonar_test" `
            -D"sonar.projectVersion=1.0" `
            -D"sonar.sources=./src" `
            -D"sonar.login=${{ secrets.SONAR_TOKEN }}"" `
            -D"sonar.host.url=${{ secrets.SONAR_HOST_URL }}"

  # sonarqube:
  #   name: SonarQube
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
      
  #     - name: Install dependencies
  #       run: npm install
        
  #     - name: Run tests with coverage
  #       run: npm run coverage

  #     - name: Run SonarScanner
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: npx sonar-scanner